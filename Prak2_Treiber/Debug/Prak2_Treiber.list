
Prak2_Treiber.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004e4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800068c  08000694  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800068c  0800068c  00010694  2**0
                  CONTENTS
  4 .ARM          00000000  0800068c  0800068c  00010694  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800068c  08000694  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800068c  0800068c  0001068c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000690  08000690  00010690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000694  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000694  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010694  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007bb  00000000  00000000  000106c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001f1  00000000  00000000  00010e7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001466  00000000  00000000  000111b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ba7  00000000  00000000  0001261e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005187  00000000  00000000  000131c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001834c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000220  00000000  00000000  000183a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000674 	.word	0x08000674

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000674 	.word	0x08000674

080001e8 <GPIO_PeriClockControl>:
 */

#include "GPIO_Driver.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d162      	bne.n	80002c0 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a64      	ldr	r2, [pc, #400]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000202:	4b64      	ldr	r3, [pc, #400]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a63      	ldr	r2, [pc, #396]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
		}else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 800020e:	e0b9      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a61      	ldr	r2, [pc, #388]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b5e      	ldr	r3, [pc, #376]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a5d      	ldr	r2, [pc, #372]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0ae      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a5c      	ldr	r2, [pc, #368]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b59      	ldr	r3, [pc, #356]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a58      	ldr	r2, [pc, #352]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0a3      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a58      	ldr	r2, [pc, #352]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b53      	ldr	r3, [pc, #332]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a52      	ldr	r2, [pc, #328]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e098      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a53      	ldr	r2, [pc, #332]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e08d      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4f      	ldr	r2, [pc, #316]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b48      	ldr	r3, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a47      	ldr	r2, [pc, #284]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e082      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a4a      	ldr	r2, [pc, #296]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b43      	ldr	r3, [pc, #268]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e077      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a46      	ldr	r2, [pc, #280]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800029c:	4b3d      	ldr	r3, [pc, #244]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a3c      	ldr	r2, [pc, #240]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e06c      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a41      	ldr	r2, [pc, #260]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d168      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80002b2:	4b38      	ldr	r3, [pc, #224]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a37      	ldr	r2, [pc, #220]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e061      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a33      	ldr	r2, [pc, #204]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80002c8:	4b32      	ldr	r3, [pc, #200]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a31      	ldr	r2, [pc, #196]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ce:	f023 0301 	bic.w	r3, r3, #1
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e056      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a2f      	ldr	r2, [pc, #188]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80002de:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	f023 0302 	bic.w	r3, r3, #2
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e04b      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80002f4:	4b27      	ldr	r3, [pc, #156]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a26      	ldr	r2, [pc, #152]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	f023 0304 	bic.w	r3, r3, #4
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e040      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a26      	ldr	r2, [pc, #152]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800030a:	4b22      	ldr	r3, [pc, #136]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000310:	f023 0308 	bic.w	r3, r3, #8
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e035      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a22      	ldr	r2, [pc, #136]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000320:	4b1c      	ldr	r3, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a1b      	ldr	r2, [pc, #108]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000326:	f023 0310 	bic.w	r3, r3, #16
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e02a      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a1d      	ldr	r2, [pc, #116]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000336:	4b17      	ldr	r3, [pc, #92]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a16      	ldr	r2, [pc, #88]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f023 0320 	bic.w	r3, r3, #32
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e01f      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800034c:	4b11      	ldr	r3, [pc, #68]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e014      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000362:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e009      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d105      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	40020000 	.word	0x40020000
 8000394:	40023800 	.word	0x40023800
 8000398:	40020400 	.word	0x40020400
 800039c:	40020800 	.word	0x40020800
 80003a0:	40020c00 	.word	0x40020c00
 80003a4:	40021000 	.word	0x40021000
 80003a8:	40021400 	.word	0x40021400
 80003ac:	40021800 	.word	0x40021800
 80003b0:	40021c00 	.word	0x40021c00
 80003b4:	40022000 	.word	0x40022000

080003b8 <GPIO_Init>:

// Implementieren Sie die weiteren Schritte. Denken Sie daran die Einträge eines Registers zurückzusetzen, bevor Sie einzelne Bits setzen!
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b082      	sub	sp, #8
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
	 //Anschalten der Clock
	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	2101      	movs	r1, #1
 80003c6:	4618      	mov	r0, r3
 80003c8:	f7ff ff0e 	bl	80001e8 <GPIO_PeriClockControl>

	 //Konfigurieren des PIN in INPUT oder OUTPUT-Modus
	 if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	795b      	ldrb	r3, [r3, #5]
 80003d0:	2b03      	cmp	r3, #3
 80003d2:	d80f      	bhi.n	80003f4 <GPIO_Init+0x3c>
	 {
		// Implementieren Sie die Funktionalität
		//pGPIOHandle->pGPIOx->MODE_REG = RESET;
		pGPIOHandle->pGPIOx->MODE_REG |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2));
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	681a      	ldr	r2, [r3, #0]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	795b      	ldrb	r3, [r3, #5]
 80003de:	4619      	mov	r1, r3
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	791b      	ldrb	r3, [r3, #4]
 80003e4:	005b      	lsls	r3, r3, #1
 80003e6:	fa01 f303 	lsl.w	r3, r1, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	430a      	orrs	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
	 
	// ####################################### ENDE IRQ #####################################################################
	
	 //Konfigurieren des Output-Speeds
	 //pGPIOHandle->pGPIOx->OUTPUT_SPEED = RESET;
	 pGPIOHandle->pGPIOx->OUTPUT_SPEED |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	689a      	ldr	r2, [r3, #8]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	799b      	ldrb	r3, [r3, #6]
 80003fe:	4619      	mov	r1, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	fa01 f303 	lsl.w	r3, r1, r3
 8000408:	4619      	mov	r1, r3
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	430a      	orrs	r2, r1
 8000410:	609a      	str	r2, [r3, #8]
	 
	 //Konfigurieren des Pull-up/down Settings
	 //pGPIOHandle->pGPIOx->PULL_UP_DOWN = RESET;
	 pGPIOHandle->pGPIOx->PULL_UP_DOWN |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	79db      	ldrb	r3, [r3, #7]
 800041c:	4619      	mov	r1, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	791b      	ldrb	r3, [r3, #4]
 8000422:	fa01 f303 	lsl.w	r3, r1, r3
 8000426:	4619      	mov	r1, r3
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	430a      	orrs	r2, r1
 800042e:	60da      	str	r2, [r3, #12]
	 
	 //Konfigurieren des Output modus
	 //pGPIOHandle->pGPIOx->OUTPUT_TYPE = RESET;
	 pGPIOHandle->pGPIOx->OUTPUT_TYPE |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	685a      	ldr	r2, [r3, #4]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	7a1b      	ldrb	r3, [r3, #8]
 800043a:	4619      	mov	r1, r3
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	791b      	ldrb	r3, [r3, #4]
 8000440:	fa01 f303 	lsl.w	r3, r1, r3
 8000444:	4619      	mov	r1, r3
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	430a      	orrs	r2, r1
 800044c:	605a      	str	r2, [r3, #4]
	 
}
 800044e:	bf00      	nop
 8000450:	3708      	adds	r7, #8
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <GPIO_WriteToOutputPin>:
	// Implementieren Sie die Funktionalität
	return (uint16_t)pGPIOx->INPUT_DATA_REG;
}

void GPIO_WriteToOutputPin(GPIO_Handle_t *pGPIO_Handle, uint8_t Value)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
 800045e:	460b      	mov	r3, r1
 8000460:	70fb      	strb	r3, [r7, #3]
	// Implementieren Sie die Funktionalität

	if(Value == SET){
 8000462:	78fb      	ldrb	r3, [r7, #3]
 8000464:	2b01      	cmp	r3, #1
 8000466:	d109      	bne.n	800047c <GPIO_WriteToOutputPin+0x26>
		//BSSR benutzen um atomares bit zu setzen
		pGPIO_Handle->pGPIOx->BIT_SET_RESET_REG = (SET << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	791b      	ldrb	r3, [r3, #4]
 800046c:	461a      	mov	r2, r3
 800046e:	2301      	movs	r3, #1
 8000470:	fa03 f202 	lsl.w	r2, r3, r2
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	619a      	str	r2, [r3, #24]
	}else{
		//BSSR benutzen um atomares bit zu resetten (pinNumber + 16bits)
		pGPIO_Handle->pGPIOx->BIT_SET_RESET_REG = (SET << (pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber + 16));
	}
}
 800047a:	e007      	b.n	800048c <GPIO_WriteToOutputPin+0x36>
		pGPIO_Handle->pGPIOx->BIT_SET_RESET_REG = (SET << (pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber + 16));
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	791b      	ldrb	r3, [r3, #4]
 8000480:	3310      	adds	r3, #16
 8000482:	2201      	movs	r2, #1
 8000484:	409a      	lsls	r2, r3
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	619a      	str	r2, [r3, #24]
}
 800048c:	bf00      	nop
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000496:	4770      	bx	lr

08000498 <delay_5seconds>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay_5seconds(void)
{
 8000498:	b480      	push	{r7}
 800049a:	b083      	sub	sp, #12
 800049c:	af00      	add	r7, sp, #0
	for(volatile uint32_t i=0; i < 6250000; i++);
 800049e:	2300      	movs	r3, #0
 80004a0:	607b      	str	r3, [r7, #4]
 80004a2:	e002      	b.n	80004aa <delay_5seconds+0x12>
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	3301      	adds	r3, #1
 80004a8:	607b      	str	r3, [r7, #4]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4a04      	ldr	r2, [pc, #16]	; (80004c0 <delay_5seconds+0x28>)
 80004ae:	4293      	cmp	r3, r2
 80004b0:	d9f8      	bls.n	80004a4 <delay_5seconds+0xc>
}
 80004b2:	bf00      	nop
 80004b4:	bf00      	nop
 80004b6:	370c      	adds	r7, #12
 80004b8:	46bd      	mov	sp, r7
 80004ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004be:	4770      	bx	lr
 80004c0:	005f5e0f 	.word	0x005f5e0f

080004c4 <main>:

int main(void)
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b08a      	sub	sp, #40	; 0x28
 80004c8:	af00      	add	r7, sp, #0

  GPIO_Handle_t GPIO_Handle_RED;
  GPIO_Handle_RED.pGPIOx = GPIOD;
 80004ca:	4b42      	ldr	r3, [pc, #264]	; (80005d4 <main+0x110>)
 80004cc:	61fb      	str	r3, [r7, #28]
  GPIO_Handle_RED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80004ce:	2301      	movs	r3, #1
 80004d0:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  GPIO_Handle_RED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 80004d4:	2307      	movs	r3, #7
 80004d6:	f887 3020 	strb.w	r3, [r7, #32]
  GPIO_Handle_RED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80004da:	2300      	movs	r3, #0
 80004dc:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
  GPIO_Handle_RED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80004e0:	2300      	movs	r3, #0
 80004e2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  GPIO_Handle_RED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80004e6:	2300      	movs	r3, #0
 80004e8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

  GPIO_Handle_t GPIO_Handle_YELLOW;
  GPIO_Handle_YELLOW.pGPIOx = GPIOD;
 80004ec:	4b39      	ldr	r3, [pc, #228]	; (80005d4 <main+0x110>)
 80004ee:	613b      	str	r3, [r7, #16]
  GPIO_Handle_YELLOW.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80004f0:	2301      	movs	r3, #1
 80004f2:	757b      	strb	r3, [r7, #21]
  GPIO_Handle_YELLOW.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 80004f4:	2308      	movs	r3, #8
 80004f6:	753b      	strb	r3, [r7, #20]
  GPIO_Handle_YELLOW.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80004f8:	2300      	movs	r3, #0
 80004fa:	763b      	strb	r3, [r7, #24]
  GPIO_Handle_YELLOW.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80004fc:	2300      	movs	r3, #0
 80004fe:	75fb      	strb	r3, [r7, #23]
  GPIO_Handle_YELLOW.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000500:	2300      	movs	r3, #0
 8000502:	75bb      	strb	r3, [r7, #22]

  GPIO_Handle_t GPIO_Handle_GREEN;
  GPIO_Handle_GREEN.pGPIOx = GPIOD;
 8000504:	4b33      	ldr	r3, [pc, #204]	; (80005d4 <main+0x110>)
 8000506:	607b      	str	r3, [r7, #4]
  GPIO_Handle_GREEN.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000508:	2301      	movs	r3, #1
 800050a:	727b      	strb	r3, [r7, #9]
  GPIO_Handle_GREEN.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
 800050c:	2309      	movs	r3, #9
 800050e:	723b      	strb	r3, [r7, #8]
  GPIO_Handle_GREEN.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000510:	2300      	movs	r3, #0
 8000512:	733b      	strb	r3, [r7, #12]
  GPIO_Handle_GREEN.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000514:	2300      	movs	r3, #0
 8000516:	72fb      	strb	r3, [r7, #11]
  GPIO_Handle_GREEN.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000518:	2300      	movs	r3, #0
 800051a:	72bb      	strb	r3, [r7, #10]

  GPIO_Init(&GPIO_Handle_RED);
 800051c:	f107 031c 	add.w	r3, r7, #28
 8000520:	4618      	mov	r0, r3
 8000522:	f7ff ff49 	bl	80003b8 <GPIO_Init>
  GPIO_Init(&GPIO_Handle_YELLOW);
 8000526:	f107 0310 	add.w	r3, r7, #16
 800052a:	4618      	mov	r0, r3
 800052c:	f7ff ff44 	bl	80003b8 <GPIO_Init>
  GPIO_Init(&GPIO_Handle_GREEN);
 8000530:	1d3b      	adds	r3, r7, #4
 8000532:	4618      	mov	r0, r3
 8000534:	f7ff ff40 	bl	80003b8 <GPIO_Init>

  for(;;){

    GPIO_WriteToOutputPin(&GPIO_Handle_RED, ENABLE);
 8000538:	f107 031c 	add.w	r3, r7, #28
 800053c:	2101      	movs	r1, #1
 800053e:	4618      	mov	r0, r3
 8000540:	f7ff ff89 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_YELLOW, DISABLE);
 8000544:	f107 0310 	add.w	r3, r7, #16
 8000548:	2100      	movs	r1, #0
 800054a:	4618      	mov	r0, r3
 800054c:	f7ff ff83 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_GREEN, DISABLE);
 8000550:	1d3b      	adds	r3, r7, #4
 8000552:	2100      	movs	r1, #0
 8000554:	4618      	mov	r0, r3
 8000556:	f7ff ff7e 	bl	8000456 <GPIO_WriteToOutputPin>
    
    delay_5seconds();
 800055a:	f7ff ff9d 	bl	8000498 <delay_5seconds>

    GPIO_WriteToOutputPin(&GPIO_Handle_RED, ENABLE);
 800055e:	f107 031c 	add.w	r3, r7, #28
 8000562:	2101      	movs	r1, #1
 8000564:	4618      	mov	r0, r3
 8000566:	f7ff ff76 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_YELLOW, ENABLE);
 800056a:	f107 0310 	add.w	r3, r7, #16
 800056e:	2101      	movs	r1, #1
 8000570:	4618      	mov	r0, r3
 8000572:	f7ff ff70 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_GREEN, DISABLE);
 8000576:	1d3b      	adds	r3, r7, #4
 8000578:	2100      	movs	r1, #0
 800057a:	4618      	mov	r0, r3
 800057c:	f7ff ff6b 	bl	8000456 <GPIO_WriteToOutputPin>

    delay_5seconds();
 8000580:	f7ff ff8a 	bl	8000498 <delay_5seconds>

    GPIO_WriteToOutputPin(&GPIO_Handle_RED, DISABLE);
 8000584:	f107 031c 	add.w	r3, r7, #28
 8000588:	2100      	movs	r1, #0
 800058a:	4618      	mov	r0, r3
 800058c:	f7ff ff63 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_YELLOW, DISABLE);
 8000590:	f107 0310 	add.w	r3, r7, #16
 8000594:	2100      	movs	r1, #0
 8000596:	4618      	mov	r0, r3
 8000598:	f7ff ff5d 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_GREEN, ENABLE);
 800059c:	1d3b      	adds	r3, r7, #4
 800059e:	2101      	movs	r1, #1
 80005a0:	4618      	mov	r0, r3
 80005a2:	f7ff ff58 	bl	8000456 <GPIO_WriteToOutputPin>

    delay_5seconds();
 80005a6:	f7ff ff77 	bl	8000498 <delay_5seconds>

    GPIO_WriteToOutputPin(&GPIO_Handle_RED, DISABLE);
 80005aa:	f107 031c 	add.w	r3, r7, #28
 80005ae:	2100      	movs	r1, #0
 80005b0:	4618      	mov	r0, r3
 80005b2:	f7ff ff50 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_YELLOW, ENABLE);
 80005b6:	f107 0310 	add.w	r3, r7, #16
 80005ba:	2101      	movs	r1, #1
 80005bc:	4618      	mov	r0, r3
 80005be:	f7ff ff4a 	bl	8000456 <GPIO_WriteToOutputPin>
    GPIO_WriteToOutputPin(&GPIO_Handle_GREEN, DISABLE);
 80005c2:	1d3b      	adds	r3, r7, #4
 80005c4:	2100      	movs	r1, #0
 80005c6:	4618      	mov	r0, r3
 80005c8:	f7ff ff45 	bl	8000456 <GPIO_WriteToOutputPin>

    delay_5seconds();
 80005cc:	f7ff ff64 	bl	8000498 <delay_5seconds>
    GPIO_WriteToOutputPin(&GPIO_Handle_RED, ENABLE);
 80005d0:	e7b2      	b.n	8000538 <main+0x74>
 80005d2:	bf00      	nop
 80005d4:	40020c00 	.word	0x40020c00

080005d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d8:	480d      	ldr	r0, [pc, #52]	; (8000610 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005da:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005e0:	480c      	ldr	r0, [pc, #48]	; (8000614 <LoopForever+0x6>)
  ldr r1, =_edata
 80005e2:	490d      	ldr	r1, [pc, #52]	; (8000618 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005e4:	4a0d      	ldr	r2, [pc, #52]	; (800061c <LoopForever+0xe>)
  movs r3, #0
 80005e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e8:	e002      	b.n	80005f0 <LoopCopyDataInit>

080005ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ee:	3304      	adds	r3, #4

080005f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005f4:	d3f9      	bcc.n	80005ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005f6:	4a0a      	ldr	r2, [pc, #40]	; (8000620 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f8:	4c0a      	ldr	r4, [pc, #40]	; (8000624 <LoopForever+0x16>)
  movs r3, #0
 80005fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005fc:	e001      	b.n	8000602 <LoopFillZerobss>

080005fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000600:	3204      	adds	r2, #4

08000602 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000602:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000604:	d3fb      	bcc.n	80005fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000606:	f000 f811 	bl	800062c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800060a:	f7ff ff5b 	bl	80004c4 <main>

0800060e <LoopForever>:

LoopForever:
    b LoopForever
 800060e:	e7fe      	b.n	800060e <LoopForever>
  ldr   r0, =_estack
 8000610:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000614:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000618:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800061c:	08000694 	.word	0x08000694
  ldr r2, =_sbss
 8000620:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000624:	2000001c 	.word	0x2000001c

08000628 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000628:	e7fe      	b.n	8000628 <ADC_IRQHandler>
	...

0800062c <__libc_init_array>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	4d0d      	ldr	r5, [pc, #52]	; (8000664 <__libc_init_array+0x38>)
 8000630:	4c0d      	ldr	r4, [pc, #52]	; (8000668 <__libc_init_array+0x3c>)
 8000632:	1b64      	subs	r4, r4, r5
 8000634:	10a4      	asrs	r4, r4, #2
 8000636:	2600      	movs	r6, #0
 8000638:	42a6      	cmp	r6, r4
 800063a:	d109      	bne.n	8000650 <__libc_init_array+0x24>
 800063c:	4d0b      	ldr	r5, [pc, #44]	; (800066c <__libc_init_array+0x40>)
 800063e:	4c0c      	ldr	r4, [pc, #48]	; (8000670 <__libc_init_array+0x44>)
 8000640:	f000 f818 	bl	8000674 <_init>
 8000644:	1b64      	subs	r4, r4, r5
 8000646:	10a4      	asrs	r4, r4, #2
 8000648:	2600      	movs	r6, #0
 800064a:	42a6      	cmp	r6, r4
 800064c:	d105      	bne.n	800065a <__libc_init_array+0x2e>
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f855 3b04 	ldr.w	r3, [r5], #4
 8000654:	4798      	blx	r3
 8000656:	3601      	adds	r6, #1
 8000658:	e7ee      	b.n	8000638 <__libc_init_array+0xc>
 800065a:	f855 3b04 	ldr.w	r3, [r5], #4
 800065e:	4798      	blx	r3
 8000660:	3601      	adds	r6, #1
 8000662:	e7f2      	b.n	800064a <__libc_init_array+0x1e>
 8000664:	0800068c 	.word	0x0800068c
 8000668:	0800068c 	.word	0x0800068c
 800066c:	0800068c 	.word	0x0800068c
 8000670:	08000690 	.word	0x08000690

08000674 <_init>:
 8000674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000676:	bf00      	nop
 8000678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067a:	bc08      	pop	{r3}
 800067c:	469e      	mov	lr, r3
 800067e:	4770      	bx	lr

08000680 <_fini>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	bf00      	nop
 8000684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000686:	bc08      	pop	{r3}
 8000688:	469e      	mov	lr, r3
 800068a:	4770      	bx	lr
